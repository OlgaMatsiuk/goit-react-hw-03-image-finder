{"version":3,"sources":["Components/SearchApi.js","Components/Searchbar/Searchbar.js","Components/ImageGallery/ImageGallery.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/Button/Button.js","Components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","baseURL","exportObject","fetchImages","a","searchQuery","page","get","then","response","data","hits","Searchbar","state","handleChange","event","setState","currentTarget","value","handleSubmit","e","preventDefault","length","props","onChangeQuery","className","onSubmit","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGallery","children","ImageGalleryItem","alt","src","url","onClick","Button","title","onButtonClick","modalRoot","document","querySelector","Modal","handleKeydown","code","onClose","handleOverlayClick","target","window","addEventListener","removeEventListener","createPortal","App","images","gallery","isLoading","error","largeImage","showModal","modalUrl","modalAlt","toggleModal","options","imagesApi","prevState","currentPage","currentPageImages","catch","message","finally","onClickImageGalleryItem","getAttribute","prevProps","style","color","textAlign","fontSize","map","id","tags","webformatURL","largeImageURL","height","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8303f139.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst KEY = '21833579-dbfb00598a636f5e3a6a2045e';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\nconst fetchImages = async ({ searchQuery = '', page = 1 }) => {\r\n  return axios\r\n    .get(\r\n      `?q=${searchQuery}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\nconst exportObject = { fetchImages };\r\nexport default exportObject;","import React, { Component } from 'react';\r\n\r\nclass Searchbar extends Component {\r\n    state = {\r\n        searchQuery: '',\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({searchQuery: event.currentTarget.value})       \r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault(); \r\n\r\n        if (this.state.searchQuery.length !== 0) {\r\n            this.props.onChangeQuery(this.state.searchQuery)     \r\n        }  \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\"> Search </span>\r\n                    </button>\r\n\r\n                    <input \r\n                    className=\"SearchForm-input\" \r\n                    type=\"text\"\r\n                    autoComplete=\"off\" \r\n                    autoFocus placeholder=\"Search images and photos\" \r\n                    value={this.state.searchQuery} \r\n                    onChange={this.handleChange}/>\r\n                </form>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Searchbar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ children }) => (\r\n  <ul className=\"ImageGallery\">{children}</ul>\r\n);\r\nImageGallery.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default ImageGallery;","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ alt, src, url, onClick }) => (\r\n  <li className=\"ImageGalleryItem\">\r\n    <img\r\n      onClick={onClick}\r\n      src={src}\r\n      alt={alt}\r\n      className=\"ImageGalleryItem-image\"\r\n      url={url}\r\n    />\r\n  </li>\r\n);\r\nImageGalleryItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n};\r\nexport default ImageGalleryItem;","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ title, onButtonClick }) => {\r\n  return (\r\n    <div className=\"ButtonPosition\">\r\n      <button type='button' className=\"Button\" onClick={onButtonClick}>\r\n        {title}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  onButtonClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import React, { Component} from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeydown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeydown)\r\n    }\r\n\r\n    handleKeydown = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    handleOverlayClick = e => {\r\n        if (e.currentTarget === e.target) {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { src, alt } = this.props;\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={this.handleOverlayClick}>\r\n                <div className=\"Modal\">\r\n                    <img src={src} alt={alt} />\r\n                </div>\r\n            </div>, \r\n            modalRoot,\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react';\nimport imagesApi from './Components/SearchApi';\n\nimport Searchbar from './Components/Searchbar';\nimport ImageGallery from './Components/ImageGallery';\nimport ImageGalleryItem from './Components/ImageGalleryItem'\nimport Button from './Components/Button';\nimport Modal from './Components/Modal';\nimport Loader from 'react-loader-spinner';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    images: [],\n    page: 1,\n    gallery: [],\n    searchQuery: '',\n    isLoading: false,\n    error: null,\n    largeImage: '',\n    showModal: false,\n    modalUrl: '',\n    modalAlt: '',\n  };\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n  }\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }))\n  }\n\n  onChangeQuery = searchQuery => {\n    this.setState({ \n      searchQuery: searchQuery, \n      page: 1, \n      images: [], \n      error: null, \n    })\n  }\n  fetchImages = () => {\n    const { searchQuery, page } = this.state;\n    const options = { searchQuery, page };\n\n    this.setState({ isLoading: true });\n\n    imagesApi\n    .fetchImages(options)\n    .then(images => {\n      this.setState( prevState => ({\n        images: [...prevState.images, ...images], \n        currentPage: prevState.page + 1,\n        currentPageImages: [...images], \n      }));\n      if (images.length === 0) {\n          this.setState({\n            error: 'Nothing was find by your query. Try again.',});\n      }})\n    .catch(error => this.setState({ error: error.message }))\n    .finally(() => this.setState({ isLoading: false }));\n  };\n\n  onClickImageGalleryItem = e => {\n    this.setState({\n      modalUrl: e.currentTarget.getAttribute('url'),\n      modalAlt: e.currentTarget.getAttribute('alt'),\n    });\n    this.toggleModal();\n  }\n\n  render() {\n    const { images, isLoading, error, showModal, modalAlt, modalUrl } = this.state;\n\n    return (\n      <>\n        <Searchbar onChangeQuery={this.onChangeQuery} />\n        {error && (\n          <p style={{ color: 'red', textAlign: 'center', fontSize: '20px' }}>\n            This is error: {error}\n          </p>\n        )}\n\n        <ImageGallery>\n          {images.map(({ id, tags, webformatURL, largeImageURL }) => (\n            <ImageGalleryItem key={id} alt={tags} src={webformatURL} url={largeImageURL} onClick={this.onClickImageGalleryItem} />\n          ))}\n        </ImageGallery>\n        { isLoading && <Loader type=\"Bars\" color=\"#00BFFF\" height={80} width={80} /> }       \n\n\n          {images.length > 0 && !isLoading && (\n          <Button title=\"Load More\" onButtonClick={this.fetchImages} />\n        )}\n\n        {showModal && (\n          <Modal src={modalUrl} alt={modalAlt} onClose={this.toggleModal} />\n        )}  \n      </>      \n    )    \n  }   \n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}