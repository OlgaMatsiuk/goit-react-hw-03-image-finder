{"version":3,"sources":["Components/SearchApi.js","Components/Searchbar/Searchbar.js","Components/ImageGallery/ImageGallery.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/Button/Button.js","Components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["ImagesApi","this","query","page","a","fetch","response","json","parsedResponse","incrementPage","Searchbar","state","searchQuery","handleChange","event","setState","currentTarget","value","handleSubmit","e","preventDefault","length","props","onChangeQuery","className","onSubmit","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGallery","children","ImageGalleryItem","alt","src","url","onClick","Button","title","onButtonClick","modalRoot","document","querySelector","Modal","handleKeydown","code","onClose","handleOverlayClick","target","window","addEventListener","removeEventListener","createPortal","imagesApi","App","images","gallery","isLoading","error","largeImage","showModal","modalUrl","modalAlt","toggleModal","handleInputSubmit","fetchImages","fatchImages","then","hits","prevState","catch","message","finally","onClickImageGalleryItem","getAttribute","prevProps","style","color","textAlign","fontSize","map","id","tags","webformatURL","largeImageURL","height","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.52980766.chunk.js","sourcesContent":["// const SearchApi = (search, page) => {\r\n//     const API_KEY = '21833579-dbfb00598a636f5e3a6a2045e';\r\n//     // const URL = \"https://pixabay.com/api/?image_type=photo&orientation=horizontal&per_page=12&key=\";\r\n\r\n//     return (\r\n//         fetch(`https://pixabay.com/api/?image_type=photo&orientation=horizontal&per_page=12&key=${API_KEY}&q=${search}&page=${page}`)\r\n//         .then(response => {\r\n//           if (response.ok) {\r\n//             return response.json();\r\n//           }\r\n\r\n//           return Promise.reject(\r\n//             new Error(`Search request ${search} not found`),\r\n//           );\r\n//         }));\r\n// }\r\n\r\n// export default SearchApi;\r\nconst KEY = '21833579-dbfb00598a636f5e3a6a2045e';\r\n\r\nexport default class ImagesApi {\r\n  constructor() {\r\n    this.query = '';\r\n    this.page = 1;\r\n  }\r\n\r\n  async fatchImages() {\r\n    const response = await fetch(\r\n      `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${this.query}&page=${this.page}&per_page=12&key=${KEY}`,\r\n    );\r\n    const parsedResponse = await response.json();\r\n    this.incrementPage();\r\n    return parsedResponse;\r\n  }\r\n\r\n  incrementPage() {\r\n    this.page += 1;\r\n  }\r\n\r\n  resetPage() {\r\n    this.page = 1;\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Searchbar extends Component {\r\n    state = {\r\n        searchQuery: '',\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({searchQuery: event.currentTarget.value})       \r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault(); \r\n\r\n        if (this.state.searchQuery.length !== 0) {\r\n            this.props.onChangeQuery(this.state.searchQuery)     \r\n        }  \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\"> Search </span>\r\n                    </button>\r\n\r\n                    <input \r\n                    className=\"SearchForm-input\" \r\n                    type=\"text\"\r\n                    autoComplete=\"off\" \r\n                    autoFocus placeholder=\"Search images and photos\" \r\n                    value={this.state.searchQuery} \r\n                    onChange={this.handleChange}/>\r\n                </form>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n// Searchbar.propTypes = {\r\n//     onSubmit: PropTypes.func.isRequired,\r\n//   };\r\n\r\nexport default Searchbar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ children }) => (\r\n  <ul className=\"ImageGallery\">{children}</ul>\r\n);\r\nImageGallery.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default ImageGallery;","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ alt, src, url, onClick }) => (\r\n  <li className=\"ImageGalleryItem\">\r\n    <img\r\n      onClick={onClick}\r\n      src={src}\r\n      alt={alt}\r\n      className=\"ImageGalleryItem-image\"\r\n      url={url}\r\n    />\r\n  </li>\r\n);\r\nImageGalleryItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n};\r\nexport default ImageGalleryItem;","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ title, onButtonClick }) => {\r\n  return (\r\n    <div className=\"ButtonPosition\">\r\n      <button type='button' className=\"Button\" onClick={onButtonClick}>\r\n        {title}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  onButtonClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import React, { Component} from 'react';\r\nimport { createPortal } from 'react-dom';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeydown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeydown)\r\n    }\r\n\r\n    handleKeydown = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    handleOverlayClick = e => {\r\n        if (e.currentTarget === e.target) {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { src, alt } = this.props;\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={this.handleOverlayClick}>\r\n                <div className=\"Modal\">\r\n                    <img src={src} alt={alt} />\r\n                </div>\r\n            </div>, \r\n            modalRoot,\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react';\n// import axios from 'axios';\nimport ImagesApi from './Components/SearchApi';\n\n// import imagesApi from './Components/imagesApi';\nimport Searchbar from './Components/Searchbar';\nimport ImageGallery from './Components/ImageGallery';\nimport ImageGalleryItem from './Components/ImageGalleryItem'\nimport Button from './Components/Button';\nimport Modal from './Components/Modal';\nimport Loader from 'react-loader-spinner';\n\nimport './App.css';\n\nconst imagesApi = new ImagesApi();\n\nclass App extends Component {\n  state = {\n    images: [],\n    page: 1,\n    gallery: [],\n    searchQuery: '',\n    isLoading: false,\n    error: null,\n    largeImage: '',\n    showModal: false,\n    modalUrl: '',\n    modalAlt: '',\n  };\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n  }\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }))\n  }\n\n  handleInputSubmit = searchQuery => {\n    this.setState({ \n      searchQuery: searchQuery, \n      page: 1, \n      images: [], \n      error: null, \n    })\n  }\n\n  fetchImages = () => {\n    // const { searchQuery, page } = this.state;\n    // const options = { searchQuery, page };\n\n    this.setState({ isLoading: true });\n\n    imagesApi\n        .fatchImages()\n        .then(({ hits }) =>\n          this.setState(prevState => ({\n            images: [...prevState.images, ...hits],\n          })),\n        )\n        .catch(error => this.setState({ error: error.message }))\n        .finally(() => this.setState({ isLoading: false }));\n    \n      }\n  //   imagesApi\n  //   .fatchImages()\n  //   .then(images => {\n  //     this.setState( prevState => ({\n  //       images: [...prevState.images, ...images], \n  //       page: prevState.page + 1,\n  //       gallery: [...images], \n  //     }));\n  //     if (images.length === 0) {\n  //         this.setState({\n  //           error: 'Nothing was find by your query. Try again.',});\n  //     }})\n    // .catch(error => this.setState({ error: error.message }))\n    // .finally(() => this.setState({ isLoading: false }));\n  // };\n\n  onClickImageGalleryItem = e => {\n    this.setState({\n      modalUrl: e.currentTarget.getAttribute('url'),\n      modalAlt: e.currentTarget.getAttribute('alt'),\n    });\n    this.toggleModal();\n  }\n\n  render() {\n    const { images, isLoading, error, showModal, modalAlt, modalUrl } = this.state;\n    // const shouldRenderLoadMoreButton = !(gallery.length < 12) && !isLoading;\n\n    return (\n      <>\n        <Searchbar onChangeQuery={this.handleInputSubmit} />\n        {error && (\n          <p style={{ color: 'red', textAlign: 'center', fontSize: '20px' }}>\n            This is error: {error}\n          </p>\n        )}\n\n        <ImageGallery>\n          {images.map(({ id, tags, webformatURL, largeImageURL }) => (\n            <ImageGalleryItem key={id} alt={tags} src={webformatURL} url={largeImageURL} onClick={this.onClickImageGalleryItem} />\n          ))}\n        </ImageGallery>\n        { isLoading && <Loader type=\"Bars\" color=\"#00BFFF\" height={80} width={80} /> }       \n\n\n          {images.length > 0 && !isLoading && (\n          <Button title=\"Load More\" onButtonClick={this.fetchImages} />\n        )}\n\n        {showModal && (\n          <Modal src={modalUrl} alt={modalAlt} onClose={this.toggleModal} />\n        )}  \n      </>      \n    )    \n  }   \n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}