{"version":3,"sources":["Components/SearchApi.js","Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.js","Components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","baseURL","exportObject","fetchImages","a","searchQuery","page","get","then","response","data","hits","Searchbar","state","handleChange","event","setState","currentTarget","value","handleSubmit","e","preventDefault","length","props","onChangeQuery","className","onSubmit","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","url","onShowLargeImg","onClick","src","alt","ImageGallery","images","showLargeImg","path","map","largeImageURL","webformatURL","id","Button","title","onButtonClick","modalRoot","document","querySelector","Modal","handleKeydown","code","onClose","handleOverlayClick","target","window","addEventListener","removeEventListener","createPortal","children","App","gallery","isLoading","error","largeImage","showModal","modalUrl","toggleModal","onClickImageGalleryItem","options","imagesApi","prevState","pageImages","catch","message","finally","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","style","color","textAlign","fontSize","height","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+TAGAA,IAAMC,SAASC,QAAU,2BACzB,IAQeC,EADM,CAAEC,YAPN,uCAAG,mCAAAC,EAAA,iEAASC,mBAAT,MAAuB,GAAvB,MAA2BC,YAA3B,MAAkC,EAAlC,oBACXP,IACJQ,IADI,aAEGF,EAFH,iBAEuBC,EAFvB,gBAJG,qCAIH,yDAIJE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,SALhB,2CAAH,uD,OCqCFC,E,4MAtCXC,MAAQ,CACJR,YAAa,I,EAGjBS,aAAe,SAACC,GACZ,EAAKC,SAAS,CAACX,YAAaU,EAAME,cAAcC,S,EAGpDC,aAAe,SAAAC,GACXA,EAAEC,iBAEoC,IAAlC,EAAKR,MAAMR,YAAYiB,QACvB,EAAKC,MAAMC,cAAc,EAAKX,MAAMR,c,4CAI5C,WACI,OACI,wBAAQoB,UAAU,YAAlB,SACI,uBAAMA,UAAU,aAAaC,SAAUC,KAAKR,aAA5C,UACI,wBAAQS,KAAK,SAASH,UAAU,oBAAhC,SACI,sBAAMA,UAAU,0BAAhB,wBAGJ,uBACAA,UAAU,mBACVG,KAAK,OACLC,aAAa,MACbC,WAAS,EAACC,YAAY,2BACtBb,MAAOS,KAAKd,MAAMR,YAClB2B,SAAUL,KAAKb,wB,GA/BXmB,aCiBTC,EAfU,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAIC,EAAP,EAAOA,eAAP,OACvB,oBAAIX,UAAU,mBAAd,SACE,qBACEY,QAASD,EACTE,IAAKH,EACLI,IAAI,GACJd,UAAU,8BCuBDe,EA5BM,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQL,EAAsB,EAAtBA,eACxBM,EAAgB,SAAAC,GACpBP,EAAgBO,IAEpB,OACE,oBAAIlB,UAAU,eAAd,SACGgB,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,cAAcC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,GAA/B,OACV,cAAC,EAAD,CACEZ,IAAKW,EAELV,eAAgB,kBAAMM,EAAaG,KAD9BE,SCIEC,EAhBA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cACvB,OACE,qBAAKzB,UAAU,iBAAf,SACE,wBAAQG,KAAK,SAASH,UAAU,SAASY,QAASa,EAAlD,SACGD,OCHHE,EAAYC,SAASC,cAAc,eAmC1BC,E,4MAxBXC,cAAgB,SAAAnC,GACG,WAAXA,EAAEoC,MACF,EAAKjC,MAAMkC,W,EAInBC,mBAAqB,SAAAtC,GACbA,EAAEH,gBAAkBG,EAAEuC,QACtB,EAAKpC,MAAMkC,W,uDAhBnB,WACIG,OAAOC,iBAAiB,UAAWlC,KAAK4B,iB,kCAG5C,WACIK,OAAOE,oBAAoB,UAAWnC,KAAK4B,iB,oBAe/C,WACI,OAAOQ,uBACH,qBAAKtC,UAAU,UAAUY,QAASV,KAAK+B,mBAAvC,SACI,qBAAKjC,UAAU,QAAf,SACCE,KAAKJ,MAAMyC,aAGhBb,O,GA5BQlB,a,iBCkGLgC,G,kNA3FbpD,MAAQ,CACN4B,OAAQ,GACRnC,KAAM,EACN4D,QAAS,GACT7D,YAAa,GACb8D,WAAW,EACXC,MAAO,KACPC,WAAY,GACZC,WAAW,EACXC,SAAU,I,EAcZC,YAAc,WACZ,EAAKxD,UAAS,kBAAoB,CAChCsD,WADY,EAAGA,e,EAInBG,wBAA0B,SAAA9B,GACxB,EAAK3B,SAAS,CAAEuD,SAAU5B,IAC1B,EAAK6B,e,EAEPhD,cAAgB,SAAAnB,GACd,EAAKW,SAAS,CACZX,YAAaA,EACbC,KAAM,EACNmC,OAAQ,GACR2B,MAAO,Q,EAGXjE,YAAc,WACZ,MAA8B,EAAKU,MAC7B6D,EAAU,CAAErE,YADlB,EAAQA,YACuBC,KAD/B,EAAqBA,MAGrB,EAAKU,SAAS,CAAEmD,WAAW,IAE3BQ,EACCxE,YAAYuE,GACZlE,MAAK,SAAAiC,GACJ,EAAKzB,UAAU,SAAA4D,GAAS,MAAK,CAC3BnC,OAAO,GAAD,mBAAMmC,EAAUnC,QAAhB,YAA2BA,IACjCnC,KAAMsE,EAAUtE,KAAO,EACvBuE,WAAW,YAAKpC,OAEI,IAAlBA,EAAOnB,QACP,EAAKN,SAAS,CACZoD,MAAO,kDAEdU,OAAM,SAAAV,GAAK,OAAI,EAAKpD,SAAS,CAAEoD,MAAOA,EAAMW,aAC5CC,SAAQ,kBAAM,EAAKhE,SAAS,CAAEmD,WAAW,Q,wDA9C5C,SAAmBc,EAAWL,GACxBA,EAAUvE,cAAgBsB,KAAKd,MAAMR,aACvCsB,KAAKxB,cAEPyD,OAAOsB,SAAS,CACdC,IAAK/B,SAASgC,gBAAgBC,aAC9BC,SAAU,a,oBA2Cd,WACE,MAA0D3D,KAAKd,MAAvD4B,EAAR,EAAQA,OAAQ0B,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,MAAOE,EAAlC,EAAkCA,UAAWC,EAA7C,EAA6CA,SAE7C,OACE,qCACE,cAAC,EAAD,CAAW/C,cAAeG,KAAKH,gBAC9B4C,GACC,oBAAGmB,MAAO,CAAEC,MAAO,MAAOC,UAAW,SAAUC,SAAU,QAAzD,4BACkBtB,KAGpB,cAAC,EAAD,CAAc3B,OAAQA,EAAQL,eAAiBT,KAAK8C,0BAClDN,GAAa,cAAC,IAAD,CAAQvC,KAAK,OAAO4D,MAAM,UAAUG,OAAQ,GAAIC,MAAO,KAGnEnD,EAAOnB,OAAS,IAAM6C,GACvB,cAAC,EAAD,CAAQlB,MAAM,YAAYC,cAAevB,KAAKxB,cAG/CmE,GACC,cAAC,EAAD,CAAOb,QAAS9B,KAAK6C,YAArB,SACE,qBAAKlC,IAAKiC,EAAUhC,IAAI,c,GApFlBN,cCCH4D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvF,MAAK,YAAkD,IAA/CwF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnD,SAASoD,eAAe,SAM1BX,M","file":"static/js/main.1702e35d.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst KEY = '21833579-dbfb00598a636f5e3a6a2045e';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\nconst fetchImages = async ({ searchQuery = '', page = 1 }) => {\r\n  return axios\r\n    .get(\r\n      `?q=${searchQuery}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\nconst exportObject = { fetchImages };\r\nexport default exportObject;","import React, { Component } from 'react';\r\n\r\nclass Searchbar extends Component {\r\n    state = {\r\n        searchQuery: '',\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({searchQuery: event.currentTarget.value})       \r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault(); \r\n\r\n        if (this.state.searchQuery.length !== 0) {\r\n            this.props.onChangeQuery(this.state.searchQuery)     \r\n        }  \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\"> Search </span>\r\n                    </button>\r\n\r\n                    <input \r\n                    className=\"SearchForm-input\" \r\n                    type=\"text\"\r\n                    autoComplete=\"off\" \r\n                    autoFocus placeholder=\"Search images and photos\" \r\n                    value={this.state.searchQuery} \r\n                    onChange={this.handleChange}/>\r\n                </form>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Searchbar;","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ url,onShowLargeImg }) => (\r\n  <li className=\"ImageGalleryItem\">\r\n    <img\r\n      onClick={onShowLargeImg}\r\n      src={url}\r\n      alt=''\r\n      className=\"ImageGalleryItem-image\"\r\n      \r\n    />\r\n  </li>\r\n);\r\nImageGalleryItem.propTypes = {\r\n  onShowLargeImg: PropTypes.func.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n};\r\nexport default ImageGalleryItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\n\r\nconst ImageGallery = ({ images, onShowLargeImg  }) => {\r\n  const showLargeImg  = path => {\r\n    onShowLargeImg (path);\r\n  };\r\nreturn (\r\n  <ul className=\"ImageGallery\">\r\n    {images.map(({ largeImageURL,webformatURL, id }) => (\r\n      <ImageGalleryItem\r\n        url={webformatURL}\r\n        key={id}\r\n        onShowLargeImg={() => showLargeImg(largeImageURL)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  onShowLargeImg : PropTypes.func.isRequired,\r\nimages: PropTypes.arrayOf(\r\n  PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    webformatURL: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n  }),\r\n).isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ title, onButtonClick }) => {\r\n  return (\r\n    <div className=\"ButtonPosition\">\r\n      <button type='button' className=\"Button\" onClick={onButtonClick}>\r\n        {title}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  onButtonClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import React, { Component} from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeydown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeydown)\r\n    }\r\n\r\n    handleKeydown = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    handleOverlayClick = e => {\r\n        if (e.currentTarget === e.target) {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={this.handleOverlayClick}>\r\n                <div className=\"Modal\">\r\n                {this.props.children}\r\n                </div>\r\n            </div>, \r\n            modalRoot,\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react';\nimport imagesApi from './Components/SearchApi';\n\nimport Searchbar from './Components/Searchbar';\nimport ImageGallery from './Components/ImageGallery';\nimport Button from './Components/Button';\nimport Modal from './Components/Modal';\nimport Loader from 'react-loader-spinner';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    images: [],\n    page: 1,\n    gallery: [],\n    searchQuery: '',\n    isLoading: false,\n    error: null,\n    largeImage: '',\n    showModal: false,\n    modalUrl: '',\n  };\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }))\n  }\n  onClickImageGalleryItem = path => {\n    this.setState({ modalUrl: path });\n    this.toggleModal();\n  }\n  onChangeQuery = searchQuery => {\n    this.setState({ \n      searchQuery: searchQuery, \n      page: 1, \n      images: [], \n      error: null, \n    })\n  }\n  fetchImages = () => {\n    const { searchQuery, page } = this.state;\n    const options = { searchQuery, page };\n\n    this.setState({ isLoading: true });\n\n    imagesApi\n    .fetchImages(options)\n    .then(images => {\n      this.setState( prevState => ({\n        images: [...prevState.images, ...images], \n        page: prevState.page + 1,\n        pageImages: [...images], \n      }));\n      if (images.length === 0) {\n          this.setState({\n            error: 'Nothing was find by your query. Try again.',});\n      }})\n    .catch(error => this.setState({ error: error.message }))\n    .finally(() => this.setState({ isLoading: false }));\n  };\n\n  render() {\n    const { images, isLoading, error, showModal, modalUrl } = this.state;\n\n    return (\n      <>\n        <Searchbar onChangeQuery={this.onChangeQuery} />\n        {error && (\n          <p style={{ color: 'red', textAlign: 'center', fontSize: '20px' }}>\n            This is error: {error}\n          </p>\n        )}\n        <ImageGallery images={images} onShowLargeImg ={this.onClickImageGalleryItem}/>\n        { isLoading && <Loader type=\"Bars\" color=\"#00BFFF\" height={80} width={80} /> }       \n\n\n          {images.length > 0 && !isLoading && (\n          <Button title=\"Load More\" onButtonClick={this.fetchImages} />\n        )}\n\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={modalUrl} alt=\"\" />\n          </Modal>\n        )}\n      </>      \n    )    \n  }   \n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}